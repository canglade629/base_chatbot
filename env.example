# Base Chatbot - Environment Configuration
# Copy this file to .env and update the values
# Use the configuration manager to set up environment-specific configs:
# python config/setup_config.py setup

# Environment Configuration
# Set this to your environment name (development, staging, production, etc.)
ENVIRONMENT=development

# Base Name - This will be used to generate resource names
# Examples: base-chatbot, my-app, company-chatbot
# This affects: app names, database names, catalog names, schema names, etc.
BASE_NAME=base-chatbot

# JWT Configuration (REQUIRED)
# Generate a strong secret key for JWT token signing
JWT_SECRET_KEY=your-super-secret-jwt-key-change-in-production
JWT_ALGORITHM=HS256
JWT_ACCESS_TOKEN_EXPIRE_MINUTES=30

# Database Configuration (REQUIRED)
# Choose your primary database: 'firestore', 'postgresql', or 'lakebase_postgres'
DATABASE_TYPE=lakebase_postgres

# Databricks Configuration (REQUIRED for AI features)
# Your Databricks workspace URL
DATABRICKS_HOST=https://your-workspace.cloud.databricks.com

# Databricks Lakebase Configuration (REQUIRED if DATABASE_TYPE=lakebase_postgres)
# These will be derived from BASE_NAME if not specified
LAKEBASE_CATALOG=
LAKEBASE_SCHEMA=
LAKEBASE_DATABASE=

# Local PostgreSQL Configuration (REQUIRED if DATABASE_TYPE=postgresql)
# These will be derived from BASE_NAME if not specified
POSTGRES_HOST=localhost
POSTGRES_PORT=5432
POSTGRES_DB=
POSTGRES_USER=
POSTGRES_PASSWORD=
POSTGRES_SCHEMA=
POSTGRES_ADMIN_ROLE=

# Firestore Configuration (REQUIRED if DATABASE_TYPE=firestore)
# Path to your Firebase service account JSON file
FIREBASE_SERVICE_ACCOUNT_PATH=config/firebase-credentials/icc-project-472009-firebase-adminsdk.json

# Databricks Model Serving Endpoints (REQUIRED)
# Set this to your serving endpoint name
SERVING_ENDPOINT=your-serving-endpoint-name

# Server Configuration (OPTIONAL)
HOST=0.0.0.0
PORT=8000
DEBUG=false

# Application Settings (OPTIONAL)
MAX_CONVERSATIONS_PER_USER=20
LOG_LEVEL=INFO

# Configuration Management
# Use the configuration manager to set up environment-specific configs:
# 
# 1. Interactive setup:
#    python config/setup_config.py setup
#
# 2. List environments:
#    python config/setup_config.py list
#
# 3. Generate .env file for specific environment:
#    python config/setup_config.py generate
#
# 4. Validate current configuration:
#    python config/setup_config.py validate
#
# 5. Switch environment:
#    export ENVIRONMENT=staging
#    python config/setup_config.py generate
#
# Databricks CLI Profile Configuration
# To use the dbxworkspace profile, ensure your ~/.databrickscfg contains:
# [dbxworkspace]
# host  = https://fe-vm-vdm-serverless-nmmvdg.cloud.databricks.com
# token = your-databricks-token-here
#
# You can retrieve your token using:
# databricks auth token --profile dbxworkspace
#
# To list available apps:
# databricks apps list --profile dbxworkspace
#
# To get app details:
# databricks apps get base-chatbot --profile dbxworkspace
#
# To list serving endpoints:
# databricks serving-endpoints list --profile dbxworkspace
#
# To list Lakebase database instances:
# databricks database list-database-instances --profile dbxworkspace